# Generated by Django 5.2.6 on 2025-10-12 09:21

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='Date updated')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('username', models.CharField(db_index=True, max_length=170, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=150, null=True, unique=True, verbose_name='Email Address')),
                ('phone_number', models.CharField(blank=True, db_index=True, max_length=15, null=True, unique=True, verbose_name='Phone Number')),
                ('password', models.CharField(max_length=128, null=True, verbose_name='Password')),
                ('email_verified', models.BooleanField(default=False, verbose_name='Email Verified')),
                ('phone_verified', models.BooleanField(default=False, verbose_name='Phone Verified')),
                ('auth_provider', models.CharField(blank=True, choices=[('email', 'Email'), ('phone', 'Phone'), ('google', 'Google'), ('apple', 'Apple'), ('firebase', 'Firebase')], max_length=50, null=True, verbose_name='Auth Provider')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('activation_key', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Activation Key')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['username'],
            },
        ),
        migrations.CreateModel(
            name='AuthenticationProviders',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('provider', models.CharField(choices=[('google', 'Google'), ('apple', 'Apple'), ('firebase', 'Firebase')], help_text="The social account provider (e.g., 'google', 'apple').", max_length=200)),
                ('provider_uid', models.CharField(help_text='The unique ID from the social account provider.', max_length=255, unique=True)),
                ('extra_data', models.JSONField(blank=True, help_text='Additional data from the provider (e.g., tokens, profile data).', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('provider', 'user')},
            },
        ),
    ]
